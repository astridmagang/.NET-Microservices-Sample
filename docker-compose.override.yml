version: '3.4'

services:

  sqldata:
    container_name: sqldata
    ports:
      - "1434:1433"
    environment: 
      - ACCEPT_EULA=Y
      - SA_PASSWORD=123321Aa@
    volumes: 
      - microservice-sqldata:/var/opt/mssql
    # networks:
    #   - microservice-network

  rabbitmq:
    container_name: rabbitmq 
    ports:
      - "15672:15672"
      - "5672:5672"

  orderservice:
    container_name: microservices-order.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - OrderConnection=Server=sqldata;Database=MicroserviceOrderDB;User Id=sa;password=123321Aa@;Encrypt=False;TrustServerCertificate=true;
      - MicroServiceAddress__Product__Uri=http://microservices-product.api
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - Identity__Audience=OrderService
      - Identity__Scopes__OrdersManagement=OrdersManagement
      - Identity__Scopes__GetOrders=GetOrders
      # - RabbitMq:HostName=amqp://guest:guest@rabbitmq:5672
      # - RabbitMq:HostName=amqp://guest:guest@rabbitmq:5672
      # - RabbitMq:HostName=http://host.docker.internal:5672
      - RabbitMq__Uri=amqp://guest:guest@rabbitmq:5672
      - RabbitMq__HostName=localhost
      - RabbitMq__Port=5672
      - RabbitMq__UserName=ghost 
      - RabbitMq__Password=ghost
    ports:
      - "7002:80"
    depends_on:
      - sqldata
      - identityservice
      - rabbitmq

  basketservice:
    container_name: microservices-basket.api    
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - BasketConnection=Server=sqldata;Database=MicroserviceBasketDB;User Id=SA;password=123321Aa@;Encrypt=False;TrustServerCertificate=true
      - RabbitMq__Uri=amqp://guest:guest@rabbitmq:5672
      - MicroServiceAddress__Discount__Uri=http://microservices-discount.api
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - Identity__Audience=BasketService
    ports:
      - "6002:80"
    depends_on:
      - sqldata
      - identityservice
      - rabbitmq

  discountservice:
    container_name: microservices-discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - DiscountConnection=Server=sqldata;Database=MicroserviceDiscountDB;User Id=SA;password=123321Aa@;Encrypt=False;TrustServerCertificate=true
    ports:
      - "8002:80"
    depends_on:
      - sqldata
      - identityservice

  productservice:
    container_name: microservices-product.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ProductConnection=Server=sqldata;Database=MicroserviceProductDB;User Id=SA;password=123321Aa@;Encrypt=False;TrustServerCertificate=true
      - RabbitMq__Uri=amqp://guest:guest@rabbitmq:5672
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - Identity__Audience=ProductService
      - Identity__Scopes__ProductsManagement=ProductsManagement
    ports:
      - "11002:80"
    depends_on:
      - sqldata
      - identityservice
      - rabbitmq

  paymentservice.endpoint:
    container_name: microservices-payment.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - PaymentConnection=Server=sqldata;Database=MicroservicePaymentDB;User Id=SA;password=123321Aa@;Encrypt=False;TrustServerCertificate=true
      - RabbitMq__Uri=amqp://guest:guest@rabbitmq:5672
    ports:
      - "10002:80"
    depends_on:
      - sqldata
      - identityservice

  identityservice:
    container_name: microservices-identity.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - AspIdentityConnection=Server=sqldata;Database=MicroserviceAspIdentityDB;User Id=SA;password=123321Aa@;Encrypt=False;TrustServerCertificate=true
      - WebFrontend__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:44328
      - AdminFrontend__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7298
    ports:
      - "7018:80"
    depends_on:
      - sqldata

  apigateway.admin:
    container_name: microservices-apigateway.admin
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - Identity__Audience=ApiGatewayAdmin
    ports:
      - "11023:80"
    depends_on:
      - sqldata
      - identityservice
      - orderservice
      - discountservice
      - basketservice
      - productservice
      - paymentservice.endpoint

  apigateway.forweb:
    container_name: microservices-apigateway.forweb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - Identity__Audience=apiGatewayForWeb
    ports:
      - "10023:80"
    depends_on:
      - sqldata
      - identityservice
      - orderservice
      - discountservice
      - basketservice
      - productservice
      - paymentservice.endpoint

  microservices.admin.frontend:
    container_name: microservices.admin.frontend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
      - MicroserviceAddress__AdminApiGateway__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:11023
    ports:
      - "7298:80"
    depends_on:
      - apigateway.admin

  microservices.web.frontend:
    container_name: microservices.web.frontend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - MicroserviceAddress__ApiGatewayForWeb__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:10023
      - Identity__Uri=http://${EXTERNAL_DNS_NAME_OR_IP}:7018
    ports:
      - "44328:80"
    depends_on:
      - apigateway.forweb

volumes:
  microservice-sqldata:
    external: false

 # # # http://host.docker.internal